# Generated by Django 5.1.6 on 2025-05-01 19:17

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Endpoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Name of the ML endpoint (e.g., 'Insurance Claim Prediction').", max_length=128)),
                ('owner', models.CharField(help_text='Owner or team responsible for the endpoint.', max_length=128)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the endpoint was created.')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MLAlgorithm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="User-friendly name for the algorithm (e.g., 'Claim Severity Predictor').", max_length=128)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the algorithm, its purpose, and features used.')),
                ('version', models.CharField(help_text="Version string for the algorithm (e.g., '1.0.0', '2.1-alpha').", max_length=128)),
                ('code', models.TextField(blank=True, help_text='Optional: Store small code snippets, configuration, or metadata related to the model.')),
                ('model_file', models.FileField(help_text='Path to the saved/pickled model file (e.g., .pkl, .joblib), relative to MEDIA_ROOT.', max_length=255, upload_to='ml_models/')),
                ('model_type', models.CharField(choices=[('RANDOM_FOREST', 'Random Forest'), ('XGBOOST', 'XGBoost'), ('OTHER', 'Other')], default='OTHER', help_text='Type of the underlying ML model framework used.', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when this algorithm version was created/registered.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of the last update to this algorithm record.')),
                ('is_active', models.BooleanField(default=True, help_text='Is this the currently active/recommended version?')),
                ('parent_endpoint', models.ForeignKey(help_text='The endpoint this algorithm belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='algorithms', to='ml_api.endpoint')),
            ],
            options={
                'ordering': ['parent_endpoint', 'name', '-version'],
                'unique_together': {('name', 'version', 'parent_endpoint')},
            },
        ),
        migrations.CreateModel(
            name='MLRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_data', models.JSONField(help_text='The input data sent for prediction.')),
                ('prediction', models.JSONField(blank=True, help_text='The prediction result returned by the model.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the prediction request was received.')),
                ('response_time', models.FloatField(blank=True, help_text='Time taken for the prediction processing (in seconds).', null=True)),
                ('algorithm', models.ForeignKey(help_text='The specific algorithm version used for this prediction.', on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='ml_api.mlalgorithm')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
